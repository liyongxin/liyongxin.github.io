<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ansible | Earlene]]></title>
  <link href="http://liyongxin.github.io/blog/categories/ansible/atom.xml" rel="self"/>
  <link href="http://liyongxin.github.io/"/>
  <updated>2019-02-28T18:09:38+08:00</updated>
  <id>http://liyongxin.github.io/</id>
  <author>
    <name><![CDATA[yxli@alauda.io]]></name>
    <email><![CDATA[yxli@alauda.io]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ansible 随手记]]></title>
    <link href="http://liyongxin.github.io/blog/2019/02/28/ansible-sui-shou-ji/"/>
    <updated>2019-02-28T14:18:47+08:00</updated>
    <id>http://liyongxin.github.io/blog/2019/02/28/ansible-sui-shou-ji</id>
    <content type="html"><![CDATA[<ul>
<li><h4>task解析json并注册变量给其他task使用</h4>

<div class="highlight"><pre><code class="language-python" data-lang="python"><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">get</span> <span class="n">config</span> <span class="n">task</span> <span class="n">stdout</span> <span class="ow">is</span> <span class="n">json</span> <span class="n">format</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">name</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">get_config</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
<span class="n">shell</span><span class="p">:</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">sbin</span><span class="o">/</span><span class="n">kubectl</span> <span class="n">get</span> <span class="n">cm</span> <span class="k">global</span><span class="o">-</span><span class="n">var</span> <span class="o">-</span><span class="n">n</span> <span class="n">alauda</span><span class="o">-</span><span class="n">system</span> <span class="o">-</span><span class="n">o</span> <span class="n">json</span>
<span class="n">register</span><span class="p">:</span> <span class="n">cms</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">set_fact</span><span class="p">:</span> <span class="n">data</span><span class="o">=&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">name</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">read_config</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
<span class="n">shell</span><span class="p">:</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">redis</span><span class="o">-</span><span class="n">cli</span> <span class="o">-</span><span class="n">a</span>
<span class="n">when</span><span class="p">:</span> <span class="n">data</span><span class="p">[</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">kind</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;]</span> <span class="o">==</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">ConfigMap</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span></code></pre></div></p></li>
<li><h3>ansible自定义模块执行命令支持管道</h3>

<p>自定义ansible module时，可以默认使用<code>AnsibleModule</code>的实例<code>run_command</code>来执行shell命令,可以指定use_unsafe_shell=True来让ansible支持管道。
use_shell会和shell模块类似，若不指定，默认为False，则已command模块运行，command是比较安全的隧道连接，但是不支持管道
<div class="highlight"><pre><code class="language-python" data-lang="python"><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">The</span> <span class="n">main</span> <span class="n">function</span><span class="o">.&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
  <span class="n">module</span> <span class="o">=</span> <span class="n">AnsibleModule</span><span class="p">(</span><span class="n">argument_spec</span><span class="o">=</span><span class="nb">dict</span><span class="p">(),</span><span class="n">supports_check_mode</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
  <span class="n">module</span><span class="o">.</span><span class="n">run_command</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">sbin</span><span class="o">/</span><span class="n">kubectl</span> <span class="n">get</span> <span class="n">po</span> <span class="o">-</span><span class="n">n</span> <span class="n">alauda</span><span class="o">-</span><span class="n">system</span> <span class="o">|</span><span class="n">grep</span> <span class="n">alauda</span><span class="o">-</span><span class="n">redis</span><span class="o">|</span><span class="n">awk</span> \<span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">END</span><span class="p">{</span><span class="k">print</span> <span class="err">$</span><span class="mi">1</span><span class="p">}</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="n">use_unsafe_shell</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
  <span class="n">redis</span> <span class="o">=</span> <span class="n">Redis</span><span class="p">(</span><span class="n">module</span><span class="p">)</span>
  <span class="n">rst</span> <span class="o">=</span> <span class="n">redis</span><span class="o">.</span><span class="n">get_redis_status</span><span class="p">()</span>
  <span class="n">module</span><span class="o">.</span><span class="n">exit_json</span><span class="p">(</span><span class="o">**</span><span class="n">rst</span><span class="p">)</span></code></pre></div></p></li>
</ul>

]]></content>
  </entry>
  
</feed>
